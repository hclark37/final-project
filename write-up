In the beginning, it was a little tense between different coding styles that we both had as group members. However, with time, this became easier for us to manage as we delved deeper into the program and the scope of our individual parts began to increase. We learned to trust eachother's work better and understand that it didn't matter if the method that the other person employed was not the way we would do it, because ultimately, the code still ran and the tasks completed. 

One of the problems we had during the later stages of our program's development was that we had to integrate different sections of code we had both written individually that conflicted with eachother. For example, the changes that had been done in my individual part of code would break the work of my groupmate. Thus, we had to work to integrate both of our solutions so that the code would run correctly. 

Through this, we learned the importance of synchronization between programmers, and communication so that we can explain and better navigate writing code that we know will cause issues with other parts of the code base, given that they're being modified by another person. Github was definitely helpful in this regard. It made it a lot easier to work together since each member could pull the current state of the code from the repository. 

We should get full discretionary points because we learned to effectively navigate working in a group as programmers. We learned to communicate our changes as they occurred throughout the programming process, and tell eachother what might need to be looked at as the other person because of our changes. We learned to effectively divey up responsibilities between group members and help share responsibilities. Ultimately too, we created a product that is effective, enjoyable, and that compiles correctly and functions as intended, as a result of our combined efforts. 
